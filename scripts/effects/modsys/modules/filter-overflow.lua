---
--- Generated by Luanalysis
--- Created by Lyr.
--- DateTime: 1/31/2021 10:39 PM
---


--[[
  Emit when accumulated value exceeds a threshold.

  INPUT:  <var>
  CFG:    variable    var<number>   name of the data variable to watch
          threshold   number        overflow amount
  PROC:   times       int           how many times overflow has been reached

--]]

if not Modsys then error("This script isn't supposed to be require'd yourself lol.") end
---@type Modsys, Filter
local Modsys, Filter = Modsys, Filter

---@class Overflow : Filter
local Overflow = Filter.new()

function Overflow:init()
  self.storage.accumulated = self:storageDefault("accumulated", 0)
end

function Overflow:update(dt)
  Modsys.debugMap("Accumulated: %s/%s", self.storage.accumulated, self.cfg.threshold)
end

function Overflow:uninit()
  -- normal uninit
end

function Overflow:process(data)
  local var = data[self.cfg.variable]
  if type(var) ~= "number" then return end

  self.storage.accumulated = self.storage.accumulated + var
  if self.storage.accumulated > self.cfg.threshold then
    data.times = self.storage.accumulated // self.cfg.threshold
    self.storage.accumulated = self.storage.accumulated % self.cfg.threshold
    return data
  end

  return -- nothing
end
